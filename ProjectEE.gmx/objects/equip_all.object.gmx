<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>virtual_speed = f_ray_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isCollision)
{
    if(weapon == 1)
    {
        virtual_speed = bumerang_speed_low;
        isCollision = false;
        exit;
    }
    else if(weapon == 3)
    {
        virtual_speed = f_ray_speed_low;
        isCollision = false;
        alarm[0] = 30;
    }
}
else
{
    if(weapon == 1)
    {
        virtual_speed = bumerang_speed;
    }
    if(alarm[0] &gt; 0)
    {
        virtual_speed = f_ray_speed_low;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(weapon == 2 || weapon == 3 || weapon == 4)
{
    rad = degtorad(number * 90 + g_running_degree);
    x = player.x + cos(rad) * 64;
    y = player.y - sin(rad) * 64;
}

else if(weapon == 1)
{
    target_direction = 0;
    
    d = floor(g_running_degree/120);
    
    if(g_running_degree % 6 == 0)
    {
        r = irandom(3);
        
        image_index = d*3+r;
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>542</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_transform</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>target_direction</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 무기 특성 &amp; 버튼 연동

if(weapon_set)
{
    weapon_set = false;
        
    sprite = spr_none;
    animate_speed = 1;
    animate_speed2 = 0;
    
    switch(weapon)
    {
    case 0:
        break;
    case 1:
        direction = point_direction(x,y,player.x,player.y);
    
        if(enemy_count &gt;= 1)
        {
            near_enemy = instance_nearest(x,y,enemy0);
            direction = point_direction(x,y,near_enemy.x,near_enemy.y);
        }
    
        if(isUse)
        {
            animate_speed2 = 2;
            sprite = spr_bumerang;
        }
        else
        {
            sprite = spr_bumerang_off;
        }
        break;
    case 2:
        if(isUse) animate_speed2 = 1;
        else animate_speed2 = 0;
        
        sprite = spr_follow_gun;
        image_alpha = 0.4;
        
        animate_speed = 2;
        delay_max = f_gun_delay;
        break;
    case 3:
        virtual_speed = f_ray_speed;    
    
        if(isUse) animate_speed2 = 1;
        else animate_speed2 = 0;
        
        sprite = spr_follow_ray;
        image_alpha = 0.4;
        
        animate_speed = 2;
        delay_max = f_ray_delay;
        break;
    case 4:
        virtual_speed = f_boom_speed;
    
        if(isUse) animate_speed2 = 1;
        else animate_speed2 = 0;
        
        sprite = spr_follow_boom;
        image_alpha = 0.4;
        
        animate_speed = 2;
        delay_max = f_boom_delay;
        break;
    }
    /*
    sprite_buffer = sprite;
    
    // TODO 불필요한 반복작업 제거
    with(my_button)
    {
        action_sprite_set(sprite_buffer, 0, 0);
    }
    */
    action_sprite_set(sprite,0,1/animate_speed);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


if(!isUse)
{
    if(my_button.isOn)
    {
        with(my_button)
        {
            image_index = 0;
            image_speed = 1/2;
            alarm[0] = 21;
            
            my_back = instance_nearest(x,y,button_icon);
        }
        
        isUse = true;
        weapon_set = true;
    }
}
else
{
    if(!my_button.isOn)
    {
        with(my_button)
        {
            image_index = 10;
            image_speed = -1/2;
            alarm[0] = 20;
        
            my_back = instance_nearest(x,y,button_icon);
        }
        isUse = false;
        weapon_set = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if(number == 1)
        weapon1_set = weapon_set;
    if(number == 2)
        weapon2_set = weapon_set;
    if(number == 3)
        weapon3_set = weapon_set;
    if(number == 4)
        weapon4_set = weapon_set;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// bumerang

if(weapon == 1)
{
    target_direction = point_direction(x,y,player.x,player.y);

    if(enemy_count &gt;= 1)
    {
        near_enemy = instance_nearest(x,y,enemy0);
        target_direction = point_direction(x,y,near_enemy.x,near_enemy.y);
    }
    
    col = false;
    
    h = room_height - 1 - 32;
    _h = sprite_yoffset + 1 + 32;
    
    if (x &lt; _h)
    {
        x = _h;
        direction = target_direction;
        speed = 0;
        col = true;
    }
    if (x &gt; room_width-1 +sprite_xoffset - sprite_width)
    {
        x = room_width-1 + sprite_xoffset - sprite_width
        direction = target_direction;
        speed = 0;
        col = true;
    }
    
    if (y &lt; _h)
    {
        y = _h;
        direction = target_direction;
        speed = 0;
        col = true;
    }
    if (y &gt;h+sprite_yoffset - sprite_height)
    {
        y = h+sprite_yoffset -  sprite_height
        direction = target_direction;
        speed = 0;
        col = true;
    }
    if(col)
    {
        part_type_direction(type2,direction+165,direction+195,0,0)
        emi=part_emitter_create(sys)
        part_emitter_region(sys,emi,x,x,y,y,ps_shape_ellipse,1)
        part_emitter_burst(sys,emi,type2,4)
    }
    
    if(isUse)
    {
        // cost
        if(pl_ee &lt; bumerang_cost)
        {
            button_all.isOn = false;
            exit;
        }
        else
        {
            pl_ee -= bumerang_cost;
        }
            
        speed = min(virtual_speed, speed + 2);
    }
    else
    {
        pl_ee = min(pl_ee_max, pl_ee + bumerang_ee_regen);
        
        speed = max(0, speed - 0.5);
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// follow_gun

if(weapon == 2)
{
    if(enemy_count &gt;= 1)
    {
        near_enemy = instance_nearest(x,y,enemy0);
        dir = point_direction(x,y,near_enemy.x,near_enemy.y);
        target_direction = dir;
    }
    
    /*
    target = instance_nearest(x,y,player)
    
    dir = point_direction(x,y,target.x,target.y);
    dis = point_distance(x,y,target.x,target.y);
    
    auto_dir = 120 - dis / 1.5
    
    if(auto_dir&lt;0)
        auto_dir=0
    
    if(dir&lt;direction)
        dir+=360
        
    if(dir&gt;160+direction&amp;&amp;dir&lt;360+direction)
        direction = dir + auto_dir
        
    if(dir&gt;direction&amp;&amp;dir&lt;200+direction)
        direction = dir - auto_dir

    */
    
    delay_current += 1;
        
    if(isUse)
    {
        speed = f_gun_speed;
        if(delay_current &gt;= delay_max)
        {
            if(pl_ee &lt; f_gun_cost)
            {
                button_all.isOn = false;
                exit;
            }
            else
            {
                pl_ee -= f_gun_cost;
                delay_current = 0;
                rad = degtorad(target_direction);
                _x = x + cos(rad)*32;
                _y = y - sin(rad)*32;
                
                random_dir = irandom(360);
                rad2 = degtorad(random_dir);
                random_dis = irandom(16);
                __x = _x + cos(rad2)*random_dis;
                __y = _y - sin(rad2)*random_dis;
                action_create_object_motion(tan1, __x, __y, f_gun_speed_tan, target_direction);
            }
        }
    }
    else
    {
        speed = f_gun_speed_low;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// follow_ray

if(weapon == 3)
{
    if(enemy_count &gt;= 1)
    {
        near_enemy = instance_nearest(x,y,enemy0);
        dir = point_direction(x,y,near_enemy.x,near_enemy.y);
        target_direction = dir;
    }
    
    /*
    target = instance_nearest(x,y,player)
    
    dir = point_direction(x,y,target.x,target.y);
    dis = point_distance(x,y,target.x,target.y);
    
    auto_dir = 120 - dis / 1.5
    
    if(auto_dir&lt;0)
        auto_dir=0
    
    if(dir&lt;direction)
        dir+=360
        
    if(dir&gt;160+direction&amp;&amp;dir&lt;360+direction)
        direction = dir + auto_dir
        
    if(dir&gt;direction&amp;&amp;dir&lt;200+direction)
        direction = dir - auto_dir
    
    if(enemy_count &gt;= 1)
    {
        near_enemy = instance_nearest(x,y,enemy0);
        dir = point_direction(x,y,near_enemy.x,near_enemy.y);
        if(virtual_speed != f_ray_speed_low)
            target_direction = dir;
    }
    */
    
    delay_current += 1;
        
    if(isUse)
    {
        speed = virtual_speed;
        if(delay_current &gt;= delay_max)
        {
            if(pl_ee &lt; f_ray_cost)
            {
                button_all.isOn = false;
                exit;
            }
            else
            {
                pl_ee -= f_ray_cost;
                delay_current = 0;
                rad = degtorad(target_direction);
                _x = x + cos(rad)*32;
                _y = y - sin(rad)*32;
                action_create_object_motion(ray, _x, _y, 0, target_direction);
                isCollision = true; // TODO fix
            }
        }
    }
    else
    {
        speed = virtual_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// follow_boom

if(weapon == 4)
{
    if(enemy_count &gt;= 1)
    {
        near_enemy = instance_nearest(x,y,enemy0);
        dir = point_direction(x,y,near_enemy.x,near_enemy.y);
        target_direction = dir;
    }
    
    /*
    target = instance_nearest(x,y,player)
    
    dir = point_direction(x,y,target.x,target.y);
    dis = point_distance(x,y,target.x,target.y);
    
    auto_dir = 120 - dis / 1.5
    
    if(auto_dir&lt;0)
        auto_dir=0
    
    if(dir&lt;direction)
        dir+=360
        
    if(dir&gt;160+direction&amp;&amp;dir&lt;360+direction)
        direction = dir + auto_dir
        
    if(dir&gt;direction&amp;&amp;dir&lt;200+direction)
        direction = dir - auto_dir
    
    if(enemy_count &gt;= 1)
    {
        near_enemy = instance_nearest(x,y,enemy0);
        dir = point_direction(x,y,near_enemy.x,near_enemy.y);
        target_direction = dir;
    }
    */
    
    delay_current += 1;
        
    if(isUse)
    {
        speed = virtual_speed;
        if(delay_current &gt;= delay_max)
        {
            if(pl_ee &lt; f_boom_cost)
            {
                button_all.isOn = false;
                exit;
            }
            else
            {
                pl_ee -= f_boom_cost;
                delay_current = 0;
                rad = degtorad(target_direction);
                _x = x + cos(rad)*32;
                _y = y - sin(rad)*32;
                action_create_object_motion(tan2, _x, _y, f_boom_speed, target_direction);
            }
        }
    }
    else
    {
        speed = virtual_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="enemy0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>isUse</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>weapon</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>live</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
hp -= bumerang_damage;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isCollision = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


part_type_direction(type2,direction+135,direction+225,0,0)
emi=part_emitter_create(sys)
part_emitter_region(sys,emi,x,x,y,y,ps_shape_ellipse,1)
part_emitter_burst(sys,emi,type2,4)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(g_running_degree % 6 == 0)
{
    action_create_object(illusion_bumerang,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
