<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>next = true;
alarm[0] = 120;
alpha = 0;
action_create_object(red_effect,0,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
        
if(next)
{
    if(file_text_eof(text_file1))
    {
        next = false;
        
        alpha = 1;
        
        e = true;
        action_create_object(fade_in,0,0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(e)exit;

if(next)
{
    if(!file_text_eof(text_file1))
    {
        next = false;
        text_number++;
        alpha = 1;
        
        string1 = file_text_read_string(text_file1);
        file_text_readln(text_file1);
        
        key_color = string_char_at(string1,0);

        draw_set_font(font0);
            
        if(key_color = "G")
        {
            color1 = make_colour_rgb(64,64,64);
            color2 = make_colour_rgb(0,255,64);
        }
        else if(key_color = "R")
        {
            color1 = make_colour_rgb(32,32,32);
            color2 = make_colour_rgb(255,32,32);
        }
        else if(key_color = "Y")
        {
            color1 = make_colour_rgb(32,32,32);
            color2 = make_colour_rgb(255,255,0);
        }
        else if(key_color = "P")
        {
            color1 = make_colour_rgb(16,16,16);
            color2 = make_colour_rgb(255,128,128);
        }
        else if(key_color = "B")
        {
            color1 = make_colour_rgb(64,64,64);
            color2 = make_colour_rgb(64,255,255);
        }
        
        key_option = string_char_at(string1,2);
        if(key_option = "N")
        {
            font_size = 1;
        }
        else if(key_option = "D")
        {
            font_size = 2;
        }
        else if(key_option = "B")
        {
            font_size = 1;
            draw_set_font(custom_font0);
        }
        else if(key_option = "E")
        {
            font_size = 1;
            draw_set_font(custom_font1);
        }
        
        key_delay = string_char_at(string1,3);
        if(key_delay = "N")
        {
            
        }
        else if(key_delay = "S")
        {
            alarm[0] = -2;
            alarm[1] = 45;
        }
        else if(key_delay = "I")
        {
            alarm[0] = -2;
        }
        
        string_buffer = string_delete(string1, 1, 3);
        string1 = string_buffer;
    }
}


if(alarm[0] == -1)
{
    alpha -= 0.025;
    
    if(alpha &lt;= 0)
    {
        next = true;
        alarm[0] = 180;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(e)exit;

if(string1 == "")
    exit;

draw_set_colour(color1);
 
for(i = -1; i &lt; 2; ++i)
{
    for(j = -1; j &lt; 2; ++j)
    {
        draw_text_transformed_colour(50 - i,room_height - j - 170,string1,font_size,font_size,0,color1,color1,color1,color1,alpha);
    }
}


draw_set_colour(color2);

draw_text_transformed_colour(50,room_height - 170,string1,font_size,font_size,0,color2,color2,color2,color2,alpha);

/*
draw_set_font(font0);

draw_set_colour(c_white);


for(i = -1; i &lt; 2; ++i)
{
    for(j = -1; j &lt; 2; ++j)
    {
        draw_text_transformed(room_width/2 - i - 100,room_height/2 - j - 30,string1,1,1,0);
    }
}

*/


/*


draw_set_font(font0);

draw_set_colour(c_white);


for(i = -1; i &lt; 2; ++i)
{
    for(j = -1; j &lt; 2; ++j)
    {
        draw_text_transformed(room_width/2 - i,room_height/2 - j,string1,2,2,0);
    }
}

draw_set_font(font0);

draw_set_colour(c_red);

draw_text_transformed(room_width/2,room_height/2,string1,2,2,0);

*/


/*
draw_set_font(bold);

draw_set_colour(c_white);


for(i = -1; i &lt; 2; ++i)
{
    for(j = -1; j &lt; 2; ++j)
    {
        draw_text_transformed(room_width/2 - i,room_height/2 - j+50,string1,1,1,0);
    }
}

draw_set_font(bold);

draw_set_colour(c_red);

draw_text_transformed(room_width/2,room_height/2+50,string1,1,1,0);

*/











</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cant_next)
    exit;

next = true;
alpha = 1;
alarm[0] = 90;
alarm[1] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
