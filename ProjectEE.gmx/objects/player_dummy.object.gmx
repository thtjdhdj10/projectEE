<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_dummy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_player_dummy</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1/6</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Move

pl_stat = 0;
pl_xmove = 2;
pl_ymove = 2;

spd = 3;

pl_incspd = 1;

pl_breakspd = 1;

pl_key_up = false;
pl_key_down = false;
pl_key_left = false;
pl_key_right = false;

if(keyboard_check(vk_up))
    pl_key_up = true;
        
if(keyboard_check(vk_down))
    pl_key_down = true;
    
if(keyboard_check(vk_left))
    pl_key_left = true;
        
if(keyboard_check(vk_right))
    pl_key_right = true;
    
if(keyboard_check_released(vk_up))
    pl_key_up = false;
    
if(keyboard_check_released(vk_down))
    pl_key_down = false;
    
if(keyboard_check_released(vk_left))
    pl_key_left = false;
    
if(keyboard_check_released(vk_right))
    pl_key_right = false;

    
if(pl_key_up)
{
    if(pl_stat=0)
    {
        vspeed -= pl_ymove;
        speed=min(speed,spd)
    }
}
else if(!pl_key_down)
{
    vspeed = min(0, vspeed+pl_breakspd);
}
        
if(pl_key_down)
{
    if(pl_stat=0)
    {
        vspeed += pl_ymove;
        speed=min(speed,spd)
    }
}
else if(!pl_key_up)
{
    vspeed = max(0, vspeed-pl_breakspd);
}
    
if(pl_key_left)
{
    if(pl_stat=0)
    {
        hspeed -= pl_xmove;
        speed=min(speed,spd)
    }
}
else if(!pl_key_right)
{
    hspeed = min(0, hspeed+pl_breakspd);
}
        
if(pl_key_right)
{
    if(pl_stat=0)
    {
        hspeed += pl_xmove;
        speed=min(speed,spd)
    }
}
else if(!pl_key_left)
{
    hspeed = max(0, hspeed-pl_breakspd);
}
        
        
        
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (x &lt; sprite_xoffset+1)
x = sprite_xoffset+1;
if (x &gt; room_width-1 +sprite_xoffset - sprite_width)
x = room_width-1 + sprite_xoffset - sprite_width


if (y &lt; sprite_yoffset+1)
y = sprite_yoffset+1;
if (y &gt;room_height-1+sprite_yoffset - sprite_height)
y = room_height-1+sprite_yoffset -  sprite_height
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="tile1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x -= hspeed;
y -= vspeed;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="door_dummy">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>fade_in</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
